# Generated by Django 5.0.3 on 2024-04-22 01:58

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ACR_GROUPS',
            fields=[
                ('ACR_GROUPID', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('DESCRIPTION', models.TextField()),
                ('EFF_DATE', models.DateField()),
                ('ACTIVE', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('END_DATE', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ACR_GROUPS_ICDS_LOG',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ICDCODE', models.CharField(max_length=255)),
                ('LOG_DATE_TIME', models.DateTimeField(auto_now_add=True)),
                ('REMARKS', models.TextField()),
                ('USERNAME', models.CharField(max_length=255)),
                ('UPDATED_CULOMNS', models.TextField()),
                ('PREVIOUS_COLUMN_VALUE', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ACR_GROUPS_LOG',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ACR_GROUPID', models.CharField(max_length=255)),
                ('LOG_DATE_TIME', models.DateTimeField(auto_now_add=True)),
                ('REMARKS', models.TextField()),
                ('USERNAME', models.CharField(max_length=255)),
                ('UPDATED_CULOMNS', models.TextField()),
                ('PREVIOUS_COLUMN_VALUE', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ACR_GROUPS_RVS_LOG',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('RVSCODE', models.CharField(max_length=255)),
                ('LOG_DATE_TIME', models.DateTimeField(auto_now_add=True)),
                ('REMARKS', models.TextField()),
                ('USERNAME', models.CharField(max_length=255)),
                ('UPDATED_CULOMNS', models.TextField()),
                ('PREVIOUS_COLUMN_VALUE', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ACR_GROUPS_TEMP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DESCRIPTION', models.TextField()),
                ('EFF_DATE', models.DateField()),
                ('ACTIVE', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('END_DATE', models.DateField(blank=True, null=True)),
                ('USERNAME', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ACR_PERICD_RULES_LOG',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ICDCODE', models.CharField(max_length=255)),
                ('LOG_DATE_TIME', models.DateTimeField(auto_now_add=True)),
                ('REMARKS', models.TextField()),
                ('USERNAME', models.CharField(max_length=255)),
                ('UPDATED_CULOMNS', models.TextField()),
                ('PREVIOUS_COLUMN_VALUE', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ACR_PERRVS_RULES_LOG',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('RVSCODE', models.CharField(max_length=255)),
                ('LOG_DATE_TIME', models.DateTimeField(auto_now_add=True)),
                ('REMARKS', models.TextField()),
                ('USERNAME', models.CharField(max_length=255)),
                ('UPDATED_CULOMNS', models.TextField()),
                ('PREVIOUS_COLUMN_VALUE', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ACR_GROUPS_ICDS',
            fields=[
                ('ICDCODE', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('DESCRIPTION', models.TextField()),
                ('EFF_DATE', models.DateField()),
                ('ACR_GROUPID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BPLMM.acr_groups')),
            ],
        ),
        migrations.CreateModel(
            name='ACR_GROUPS_ICDS_TEMP',
            fields=[
                ('ICDCODE', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('DESCRIPTION', models.TextField()),
                ('EFF_DATE', models.DateField()),
                ('USERNAME', models.CharField(max_length=255)),
                ('ACR_GROUPID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BPLMM.acr_groups')),
            ],
        ),
        migrations.CreateModel(
            name='ACR_GROUPS_RVS',
            fields=[
                ('RVSCODE', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('DESCRIPTION', models.TextField()),
                ('RVU', models.IntegerField()),
                ('EFF_DATE', models.DateField()),
                ('END_DATE', models.DateField(blank=True, null=True)),
                ('ACR_GROUPID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BPLMM.acr_groups')),
            ],
        ),
        migrations.CreateModel(
            name='ACR_GROUPS_RVS_TEMP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DESCRIPTION', models.TextField()),
                ('RVU', models.IntegerField()),
                ('EFF_DATE', models.DateField()),
                ('END_DATE', models.DateField(blank=True, null=True)),
                ('USERNAME', models.CharField(max_length=255)),
                ('ACR_GROUPID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BPLMM.acr_groups')),
            ],
        ),
        migrations.CreateModel(
            name='ACR_PERICD_RULES',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ICDCODE', models.CharField(max_length=255)),
                ('EFF_DATE', models.DateField()),
                ('PRIMARY_AMOUNT', models.DecimalField(decimal_places=2, max_digits=10)),
                ('PRIMARY_HOSP_SHARE', models.DecimalField(decimal_places=2, max_digits=10)),
                ('PRIMARY_PROF_SHARE', models.DecimalField(decimal_places=2, max_digits=10)),
                ('SECONDARY_AMOUNT', models.DecimalField(decimal_places=2, max_digits=10)),
                ('SECONDARY_HOSP_SHARE', models.DecimalField(decimal_places=2, max_digits=10)),
                ('SECONDARY_PROF_SHARE', models.DecimalField(decimal_places=2, max_digits=10)),
                ('PCF_AMOUNT', models.DecimalField(decimal_places=2, max_digits=10)),
                ('PCF_HOSP_SHARE', models.DecimalField(decimal_places=2, max_digits=10)),
                ('PCF_PROF_SHARE', models.DecimalField(decimal_places=2, max_digits=10)),
                ('CHECK_OCCURS_PER_CLAIM', models.CharField(max_length=255)),
                ('CHECK_OCCURS_PER_PERSON', models.CharField(max_length=255)),
                ('HECK_LATERALITY', models.CharField(choices=[('T', 'True'), ('F', 'False'), ('N/A', 'Not Applicable')], max_length=3)),
                ('CHECK_GENDER', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('B', 'Both')], max_length=1)),
                ('CHECK_AGE', models.CharField(max_length=255)),
                ('CHECK_FACILITY_H1', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('CHECK_FACILITY_H2', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('CHECK_FACILITY_H3', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('CHECK_FACILITY_ASC', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('CHECK_FACILITY_PCF', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('CHECK_FACILITY_MAT', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('CHECK_FACILITY_FSDC', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('CHECK_SINGLE_PERIOD_DAYS', models.CharField(max_length=255)),
                ('CHECK_ADDITIONAL_CODES', models.TextField()),
                ('CHECK_PREAUTHORIZATION', models.CharField(choices=[('T', 'True'), ('F', 'False'), ('N/A', 'Not Applicable')], max_length=3)),
                ('CHECK_QUALIFIER', models.CharField(choices=[('T', 'True'), ('F', 'False'), ('N/A', 'Not Applicable')], max_length=3)),
                ('DEDUCT_FROM_45DAYS', models.CharField(max_length=255)),
                ('CHECK_GIDAS', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('FIXED_COPAY', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('CHECK_DIRECT_FILING', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('CHECK_PCF_SECONDARY_CR', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('CHECK_ASC_SECONDARY_CR', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('ACTIVE', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('EFF_END_DATE', models.DateField()),
                ('CHECK_FACILITY_TSEKAP', models.CharField(choices=[('T', 'True'), ('F', 'False'), ('N/A', 'Not Applicable')], max_length=3)),
                ('CHECK_FACILITY_ABTC', models.CharField(choices=[('T', 'True'), ('F', 'False'), ('N/A', 'Not Applicable')], max_length=3)),
                ('CHECK_FACILITY_TBDOTSC', models.CharField(choices=[('T', 'True'), ('F', 'False'), ('N/A', 'Not Applicable')], max_length=3)),
                ('CHECK_FACILITY_OPMC', models.CharField(choices=[('T', 'True'), ('F', 'False'), ('N/A', 'Not Applicable')], max_length=3)),
                ('CHECK_SPC_RELATED_BEN_CODES', models.TextField()),
                ('CHECK_LENGTH_OF_STAY', models.CharField(max_length=255)),
                ('VALIDATION_RULES', models.TextField()),
                ('TO_BE_TAGGED_FOR_POST_AUDIT', models.CharField(choices=[('T', 'True'), ('F', 'False'), ('N/A', 'Not Applicable')], max_length=3)),
                ('CHECK_FACILITY_RHU', models.CharField(choices=[('T', 'True'), ('F', 'False'), ('N/A', 'Not Applicable')], max_length=3)),
                ('CHECK_FACILITY_PCB', models.CharField(choices=[('T', 'True'), ('F', 'False'), ('N/A', 'Not Applicable')], max_length=3)),
                ('ACR_GROUPID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BPLMM.acr_groups')),
            ],
        ),
        migrations.CreateModel(
            name='ACR_PERICD_RULES_TEMP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ICDCODE', models.CharField(max_length=255)),
                ('EFF_DATE', models.DateField()),
                ('PRIMARY_AMOUNT', models.DecimalField(decimal_places=2, max_digits=10)),
                ('PRIMARY_HOSP_SHARE', models.DecimalField(decimal_places=2, max_digits=10)),
                ('PRIMARY_PROF_SHARE', models.DecimalField(decimal_places=2, max_digits=10)),
                ('SECONDARY_AMOUNT', models.DecimalField(decimal_places=2, max_digits=10)),
                ('SECONDARY_HOSP_SHARE', models.DecimalField(decimal_places=2, max_digits=10)),
                ('SECONDARY_PROF_SHARE', models.DecimalField(decimal_places=2, max_digits=10)),
                ('PCF_AMOUNT', models.DecimalField(decimal_places=2, max_digits=10)),
                ('PCF_HOSP_SHARE', models.DecimalField(decimal_places=2, max_digits=10)),
                ('PCF_PROF_SHARE', models.DecimalField(decimal_places=2, max_digits=10)),
                ('CHECK_OCCURS_PER_CLAIM', models.CharField(max_length=255)),
                ('CHECK_OCCURS_PER_PERSON', models.CharField(max_length=255)),
                ('HECK_LATERALITY', models.CharField(choices=[('T', 'True'), ('F', 'False'), ('N/A', 'Not Applicable')], max_length=3)),
                ('CHECK_GENDER', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('B', 'Both')], max_length=1)),
                ('CHECK_AGE', models.CharField(max_length=255)),
                ('CHECK_FACILITY_H1', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('CHECK_FACILITY_H2', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('CHECK_FACILITY_H3', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('CHECK_FACILITY_ASC', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('CHECK_FACILITY_PCF', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('CHECK_FACILITY_MAT', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('CHECK_FACILITY_FSDC', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('CHECK_SINGLE_PERIOD_DAYS', models.CharField(max_length=255)),
                ('CHECK_ADDITIONAL_CODES', models.TextField()),
                ('CHECK_PREAUTHORIZATION', models.CharField(choices=[('T', 'True'), ('F', 'False'), ('N/A', 'Not Applicable')], max_length=3)),
                ('CHECK_QUALIFIER', models.CharField(choices=[('T', 'True'), ('F', 'False'), ('N/A', 'Not Applicable')], max_length=3)),
                ('DEDUCT_FROM_45DAYS', models.CharField(max_length=255)),
                ('CHECK_GIDAS', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('FIXED_COPAY', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('CHECK_DIRECT_FILING', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('CHECK_PCF_SECONDARY_CR', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('CHECK_ASC_SECONDARY_CR', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('ACTIVE', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('EFF_END_DATE', models.DateField()),
                ('CHECK_FACILITY_TSEKAP', models.CharField(choices=[('T', 'True'), ('F', 'False'), ('N/A', 'Not Applicable')], max_length=3)),
                ('CHECK_FACILITY_ABTC', models.CharField(choices=[('T', 'True'), ('F', 'False'), ('N/A', 'Not Applicable')], max_length=3)),
                ('CHECK_FACILITY_TBDOTSC', models.CharField(choices=[('T', 'True'), ('F', 'False'), ('N/A', 'Not Applicable')], max_length=3)),
                ('CHECK_FACILITY_OPMC', models.CharField(choices=[('T', 'True'), ('F', 'False'), ('N/A', 'Not Applicable')], max_length=3)),
                ('CHECK_SPC_RELATED_BEN_CODES', models.TextField()),
                ('CHECK_LENGTH_OF_STAY', models.CharField(max_length=255)),
                ('VALIDATION_RULES', models.TextField()),
                ('TO_BE_TAGGED_FOR_POST_AUDIT', models.CharField(choices=[('T', 'True'), ('F', 'False'), ('N/A', 'Not Applicable')], max_length=3)),
                ('CHECK_FACILITY_RHU', models.CharField(choices=[('T', 'True'), ('F', 'False'), ('N/A', 'Not Applicable')], max_length=3)),
                ('CHECK_FACILITY_PCB', models.CharField(choices=[('T', 'True'), ('F', 'False'), ('N/A', 'Not Applicable')], max_length=3)),
                ('USERNAME', models.CharField(max_length=255)),
                ('ACR_GROUPID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BPLMM.acr_groups')),
            ],
        ),
        migrations.CreateModel(
            name='ACR_PERRVS_RULES',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('RVSCODE', models.CharField(max_length=255)),
                ('EFF_DATE', models.DateField()),
                ('PRIMARY_AMOUNT', models.DecimalField(decimal_places=2, max_digits=10)),
                ('PRIMARY_HOSP_SHARE', models.DecimalField(decimal_places=2, max_digits=10)),
                ('PRIMARY_PROF_SHARE', models.DecimalField(decimal_places=2, max_digits=10)),
                ('SECONDARY_AMOUNT', models.DecimalField(decimal_places=2, max_digits=10)),
                ('SECONDARY_HOSP_SHARE', models.DecimalField(decimal_places=2, max_digits=10)),
                ('SECONDARY_PROF_SHARE', models.DecimalField(decimal_places=2, max_digits=10)),
                ('PCF_AMOUNT', models.DecimalField(decimal_places=2, max_digits=10)),
                ('PCF_HOSP_SHARE', models.DecimalField(decimal_places=2, max_digits=10)),
                ('PCF_PROF_SHARE', models.DecimalField(decimal_places=2, max_digits=10)),
                ('CHECK_OCCURS_PER_CLAIM', models.CharField(max_length=255)),
                ('CHECK_OCCURS_PER_PERSON', models.CharField(max_length=255)),
                ('CHECK_LATERALITY', models.CharField(choices=[('T', 'True'), ('F', 'False'), ('N/A', 'Not Applicable')], max_length=3)),
                ('CHECK_GENDER', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('B', 'Both')], max_length=1)),
                ('CHECK_AGE', models.CharField(max_length=255)),
                ('CHECK_FACILITY_H1', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('CHECK_FACILITY_H2', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('CHECK_FACILITY_H3', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('CHECK_FACILITY_ASC', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('CHECK_FACILITY_PCF', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('CHECK_FACILITY_MAT', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('CHECK_FACILITY_FSDC', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('CHECK_SINGLE_PERIOD_DAYS', models.CharField(max_length=255)),
                ('CHECK_ADDITIONAL_CODES', models.TextField()),
                ('CHECK_PREAUTHORIZATION', models.CharField(choices=[('T', 'True'), ('F', 'False'), ('N/A', 'Not Applicable')], max_length=3)),
                ('CHECK_QUALIFIER', models.CharField(choices=[('T', 'True'), ('F', 'False'), ('N/A', 'Not Applicable')], max_length=3)),
                ('DEDUCT_FROM_45DAYS', models.CharField(max_length=255)),
                ('CHECK_GIDAS', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('FIXED_COPAY', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('CHECK_DIRECT_FILING', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('CHECK_PCF_SECONDARY_CR', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('CHECK_ASC_SECONDARY_CR', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('ACTIVE', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('EFF_END_DATE', models.DateField()),
                ('CHECK_FACILITY_TSEKAP', models.CharField(choices=[('T', 'True'), ('F', 'False'), ('N/A', 'Not Applicable')], max_length=3)),
                ('CHECK_FACILITY_ABTC', models.CharField(choices=[('T', 'True'), ('F', 'False'), ('N/A', 'Not Applicable')], max_length=3)),
                ('CHECK_FACILITY_TBDOTSC', models.CharField(choices=[('T', 'True'), ('F', 'False'), ('N/A', 'Not Applicable')], max_length=3)),
                ('CHECK_FACILITY_OPMC', models.CharField(choices=[('T', 'True'), ('F', 'False'), ('N/A', 'Not Applicable')], max_length=3)),
                ('CHECK_WHAT_IS_COVERED_BY_AMT', models.CharField(max_length=255)),
                ('CHECK_SPC_RELATED_BEN_CODES', models.TextField()),
                ('CHECK_LENGTH_OF_STAY', models.CharField(max_length=255)),
                ('VALIDATION_RULES', models.TextField()),
                ('TO_BE_TAGGED_FOR_POST_AUDIT', models.CharField(choices=[('T', 'True'), ('F', 'False'), ('N/A', 'Not Applicable')], max_length=3)),
                ('CHECK_FACILITY_RHU', models.CharField(choices=[('T', 'True'), ('F', 'False'), ('N/A', 'Not Applicable')], max_length=3)),
                ('CHECK_FACILITY_PCB', models.CharField(choices=[('T', 'True'), ('F', 'False'), ('N/A', 'Not Applicable')], max_length=3)),
                ('ACR_GROUPID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BPLMM.acr_groups')),
            ],
        ),
        migrations.CreateModel(
            name='ACR_PERRVS_RULES_TEMP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('RVSCODE', models.CharField(max_length=255)),
                ('EFF_DATE', models.DateField()),
                ('PRIMARY_AMOUNT', models.DecimalField(decimal_places=2, max_digits=10)),
                ('PRIMARY_HOSP_SHARE', models.DecimalField(decimal_places=2, max_digits=10)),
                ('PRIMARY_PROF_SHARE', models.DecimalField(decimal_places=2, max_digits=10)),
                ('SECONDARY_AMOUNT', models.DecimalField(decimal_places=2, max_digits=10)),
                ('SECONDARY_HOSP_SHARE', models.DecimalField(decimal_places=2, max_digits=10)),
                ('SECONDARY_PROF_SHARE', models.DecimalField(decimal_places=2, max_digits=10)),
                ('PCF_AMOUNT', models.DecimalField(decimal_places=2, max_digits=10)),
                ('PCF_HOSP_SHARE', models.DecimalField(decimal_places=2, max_digits=10)),
                ('PCF_PROF_SHARE', models.DecimalField(decimal_places=2, max_digits=10)),
                ('CHECK_OCCURS_PER_CLAIM', models.CharField(max_length=255)),
                ('CHECK_OCCURS_PER_PERSON', models.CharField(max_length=255)),
                ('CHECK_LATERALITY', models.CharField(choices=[('T', 'True'), ('F', 'False'), ('N/A', 'Not Applicable')], max_length=3)),
                ('CHECK_GENDER', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('B', 'Both')], max_length=1)),
                ('CHECK_AGE', models.CharField(max_length=255)),
                ('CHECK_FACILITY_H1', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('CHECK_FACILITY_H2', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('CHECK_FACILITY_H3', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('CHECK_FACILITY_ASC', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('CHECK_FACILITY_PCF', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('CHECK_FACILITY_MAT', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('CHECK_FACILITY_FSDC', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('CHECK_SINGLE_PERIOD_DAYS', models.CharField(max_length=255)),
                ('CHECK_ADDITIONAL_CODES', models.TextField()),
                ('CHECK_PREAUTHORIZATION', models.CharField(choices=[('T', 'True'), ('F', 'False'), ('N/A', 'Not Applicable')], max_length=3)),
                ('CHECK_QUALIFIER', models.CharField(choices=[('T', 'True'), ('F', 'False'), ('N/A', 'Not Applicable')], max_length=3)),
                ('DEDUCT_FROM_45DAYS', models.CharField(max_length=255)),
                ('CHECK_GIDAS', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('FIXED_COPAY', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('CHECK_DIRECT_FILING', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('CHECK_PCF_SECONDARY_CR', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('CHECK_ASC_SECONDARY_CR', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('ACTIVE', models.CharField(choices=[('T', 'True'), ('F', 'False')], max_length=3)),
                ('EFF_END_DATE', models.DateField()),
                ('CHECK_FACILITY_TSEKAP', models.CharField(choices=[('T', 'True'), ('F', 'False'), ('N/A', 'Not Applicable')], max_length=3)),
                ('CHECK_FACILITY_ABTC', models.CharField(choices=[('T', 'True'), ('F', 'False'), ('N/A', 'Not Applicable')], max_length=3)),
                ('CHECK_FACILITY_TBDOTSC', models.CharField(choices=[('T', 'True'), ('F', 'False'), ('N/A', 'Not Applicable')], max_length=3)),
                ('CHECK_FACILITY_OPMC', models.CharField(choices=[('T', 'True'), ('F', 'False'), ('N/A', 'Not Applicable')], max_length=3)),
                ('CHECK_WHAT_IS_COVERED_BY_AMT', models.CharField(max_length=255)),
                ('CHECK_SPC_RELATED_BEN_CODES', models.TextField()),
                ('CHECK_LENGTH_OF_STAY', models.CharField(max_length=255)),
                ('VALIDATION_RULES', models.TextField()),
                ('TO_BE_TAGGED_FOR_POST_AUDIT', models.CharField(choices=[('T', 'True'), ('F', 'False'), ('N/A', 'Not Applicable')], max_length=3)),
                ('CHECK_FACILITY_RHU', models.CharField(choices=[('T', 'True'), ('F', 'False'), ('N/A', 'Not Applicable')], max_length=3)),
                ('CHECK_FACILITY_PCB', models.CharField(choices=[('T', 'True'), ('F', 'False'), ('N/A', 'Not Applicable')], max_length=3)),
                ('USERNAME', models.CharField(max_length=255)),
                ('ACR_GROUPID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BPLMM.acr_groups')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_encoder', models.BooleanField(default=False)),
                ('is_approver', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
